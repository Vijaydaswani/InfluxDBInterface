{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/data.service.ts","webpack:///./src/app/home/home.component.css","webpack:///./src/app/home/home.component.html","webpack:///./src/app/home/home.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,4E;;;;;;;;;;;;;;;;;;;ACZyC;AACc;AACD;AAGtD,IAAM,MAAM,GAAW;IACrB,EAAE,IAAI,EAAE,EAAE,EAAE,SAAS,EAAE,kEAAa,EAAE;CAEvC,CAAC;AAOF;IAAA;IAGA,CAAC;IAHY,gBAAgB;QAJ5B,8DAAQ,CAAC;YACR,OAAO,EAAE,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;YACvC,OAAO,EAAE,CAAC,4DAAY,CAAC;SACxB,CAAC;OACW,gBAAgB,CAG5B;IAAD,uBAAC;CAAA;AAH4B;;;;;;;;;;;;ACf7B,+DAA+D,+H;;;;;;;;;;;ACA/D,uH;;;;;;;;;;;;;;;;;ACA0C;AAO1C;IALA;QAME,UAAK,GAAG,eAAe,CAAC;IAC1B,CAAC;IAFY,YAAY;QALxB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;YACpB,yFAAmC;;SAEpC,CAAC;OACW,YAAY,CAExB;IAAD,mBAAC;CAAA;AAFwB;;;;;;;;;;;;;;;;;;;;;;;;;ACPiC;AACjB;AAEe;AACT;AACO;AACY;AACS;AAC1B;AAkBjD;IAAA;IAAyB,CAAC;IAAb,SAAS;QAhBrB,8DAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,2DAAY;gBACZ,kEAAa;aACd;YACD,OAAO,EAAE;gBACP,uEAAa;gBACb,oEAAgB;gBAChB,0DAAW;gBACX,kEAAmB;gBACnB,kFAAgB;gBAChB,wDAAU;aACX;YACD,SAAS,EAAE,EAAE;YACb,SAAS,EAAE,CAAC,2DAAY,CAAC;SAC1B,CAAC;OACW,SAAS,CAAI;IAAD,gBAAC;CAAA;AAAJ;;;;;;;;;;;;;;;;;;;;AC1BqB;AAE0B;AAChC;AAKrC;IAGE,qBAAoB,IAAgB,EAAU,IAAU;QAApC,SAAI,GAAJ,IAAI,CAAY;QAAU,SAAI,GAAJ,IAAI,CAAM;IAAI,CAAC;IAE7D,8BAAQ,GAAR,UAAS,IAAI,EAAE,IAAI;QAAnB,iBASC;QARC,OAAO,IAAI,CAAC,IAAI;aACb,IAAI,CAAC,wBAAwB,GAAG,IAAI,EAAE,IAAI,CAAC;aAC3C,IAAI,CAAC,cAAI;YACR,KAAI,CAAC,IAAI,GAAG,IAAI,CAAC;YAEjB,OAAO,CAAC,GAAG,CAAC,KAAI,CAAC,IAAI,CAAC,CAAC;YACvB,OAAO,KAAI,CAAC,IAAI,CAAC;QACnB,CAAC,CAAC,CAAC;IACP,CAAC;IAdU,WAAW;QAHvB,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;+EAI0B,4EAAU,EAAgB,kDAAI;OAH7C,WAAW,CAevB;IAAD,kBAAC;CAAA;AAfuB;;;;;;;;;;;;ACRxB,+DAA+D,uI;;;;;;;;;;;ACA/D,8RAA8R,YAAY,+hC;;;;;;;;;;;;;;;;;;;ACAjO;AACjB;AACV;AAO9C;IAKE,uBAAoB,EAAe,EAAU,WAAwB;QAAjD,OAAE,GAAF,EAAE,CAAa;QAAU,gBAAW,GAAX,WAAW,CAAa;QAUrE,YAAO,GAAY,KAAK,CAAC;QATvB,IAAI,CAAC,UAAU,EAAE,CAAC;IACpB,CAAC;IALD,gCAAQ,GAAR;IAEA,CAAC;IAeD,kCAAU,GAAV;QACE,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YACxB,IAAI,EAAE,IAAI;YACV,SAAS,EAAE,CAAC,EAAE,CAAC;SAChB,CAAC,CAAC;IACL,CAAC;IAED,uCAAe,GAAf,UAAgB,KAAK;QACnB,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QACnB,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;IAC7B,CAAC;IACD,sBAAI,4BAAC;aAAL;YACE,OAAO,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC;QAC5B,CAAC;;;OAAA;IAED,oCAAY,GAAZ,UAAa,KAAK;QAChB,IAAI,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,EAAE;YACjC,IAAI,IAAI,GAAG,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;YACjC,IAAI,QAAQ,GAAG,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC;YAC7C,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;YAClB,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;YAEtB,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;SACtC;IACH,CAAC;IAEO,mCAAW,GAAnB;QACE,IAAI,KAAK,GAAG,IAAI,QAAQ,EAAE,CAAC;QAC3B,oKAAoK;QACpK,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,KAAK,CAAC,CAAC;QACzC,KAAK,CAAC,MAAM,CAAC,MAAM,EAAE,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,KAAK,CAAC,CAAC;QAClD,OAAO,KAAK,CAAC;IACf,CAAC;IACD,gCAAQ,GAAR;QAAA,iBAyBC;QAxBC,IAAM,SAAS,GAAG,IAAI,CAAC,WAAW,EAAE,CAAC;QACrC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,SAAS,CAAC,KAAK,CAAC;QACnC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,CAAC,CAAC,SAAS,CAAC,KAAK,CAAC;QACxC,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACpB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC;QACtC,yEAAyE;QACzE,sCAAsC;QACtC,OAAO,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;QACvB,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,SAAS,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC,SAAS,CAC5D,cAAI;YACF,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;YAClB,KAAK,CAAC,OAAO,CAAC,CAAC;YACf,KAAI,CAAC,OAAO,GAAG,KAAK,CAAC;QACvB,CAAC,EACD,eAAK;YACH,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QACrB,CAAC,CACF,CAAC;QAEF;;;;mBAIW;IACb,CAAC;IACD,iCAAS,GAAT;QACE,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;QACrC,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC,KAAK,GAAG,EAAE,CAAC;IAC1C,CAAC;IACD,yCAAiB,GAAjB,UAAkB,KAAK;QACrB,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;IACrB,CAAC;IAnEuB;QAAvB,+DAAS,CAAC,WAAW,CAAC;wEAAY,wDAAU;oDAAC;IAjBnC,aAAa;QALzB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;YACpB,gGAAoC;;SAErC,CAAC;+EAMwB,0DAAW,EAAuB,yDAAW;OAL1D,aAAa,CAuFzB;IAAD,oBAAC;CAAA;AAvFyB;;;;;;;;;;;;;ACT1B;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,IAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;ACfnE;AAAA;AAAA;AAAA;AAAA;AAA+C;AAC4B;AAE9B;AACY;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,gGAAsB,EAAE,CAAC,eAAe,CAAC,yDAAS,CAAC;KAChD,KAAK,CAAC,aAAG,IAAI,cAAO,CAAC,KAAK,CAAC,GAAG,CAAC,EAAlB,CAAkB,CAAC,CAAC","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { HomeComponent } from './home/home.component';\n\n\nconst routes: Routes = [\n  { path: '', component: HomeComponent },\n\n];\n\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule {\n\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\n<router-outlet></router-outlet>\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'AngularInflux';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HomeComponent } from './home/home.component';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '../../node_modules/@angular/common/http';\nimport { HttpModule, Http } from '@angular/http';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomeComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n    HttpModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\n\nimport { HttpClient } from '../../node_modules/@angular/common/http';\nimport { Http } from '@angular/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DataService {\n  data;\n  node;\n  constructor(private http: HttpClient, private Http: Http) { }\n\n  sendFile(file, name) {\n    return this.http\n      .post('/api/import?tableName=' + name, file)\n      .pipe(data => {\n        this.data = data;\n\n        console.log(this.data);\n        return this.data;\n      });\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2hvbWUvaG9tZS5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<nav class=\\\"navbar navbar-expand-lg navbar-dark bg-dark\\\" height=\\\"32\\\">\\n\\n  <a class=\\\"navbar-brand\\\" style=\\\"color:white\\\" height=\\\"32\\\">Demo</a>\\n</nav>\\n<div class=\\\"container\\\" class=\\\"d-flex align-items-start\\\">\\n  <div class=\\\"card mt-5\\\" style=\\\"margin:auto;width: auto;\\\">\\n    <div class=\\\"card-body\\\">\\n\\n      <div class=\\\"container-fluid\\\">\\n        <div class=\\\"row\\\">\\n\\n\\n\\n          <form role=\\\"form\\\" [formGroup]=\\\"form\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n\\n\\n            <h3 class=\\\"card-title\\\">Upload Excel file to import the data in InfluxDB</h3>\\n\\n            <div class=\\\"form-group\\\" style=\\\"text-align:center !important\\\">\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"tableName\\\" placeholder=\\\"Enter Table Name \\\"\\n                required>\\n\\n            </div>\\n            <div class=\\\"form-group\\\" style=\\\"text-align:center !important\\\">\\n              <input type=\\\"file\\\" class=\\\"form-control\\\" id=\\\"xlsx\\\" (change)=\\\"onFileChange($event)\\\" #fileInput\\n                placeholder=\\\"XLS/CSV\\\" required>\\n              <small id=\\\"files\\\" class=\\\"form-text text-muted\\\">Mandatory</small>\\n            </div>\\n\\n\\n            <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\">Submit</button>\\n          </form>\\n\\n\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\"","import { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { DataService } from '../data.service';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  ngOnInit() {\n\n  }\n  constructor(private fb: FormBuilder, private dataService: DataService) {\n    this.createForm();\n  }\n\n\n\n\n  upload: FormGroup;\n  terraformFile;\n  form: FormGroup;\n  loading: boolean = false;\n  tableName;\n  @ViewChild('fileInput') fileInput: ElementRef;\n\n  createForm() {\n    this.form = this.fb.group({\n      xlsx: null,\n      tableName: [''],\n    });\n  }\n\n  onFileSelection(event) {\n    console.log(event);\n    this.terraformFile = event;\n  }\n  get f() {\n    return this.form.controls;\n  }\n\n  onFileChange(event) {\n    if (event.target.files.length > 0) {\n      let file = event.target.files[0];\n      let filename = event.target.files[0]['name'];\n      console.log(file);\n      console.log(filename);\n\n      this.form.get('xlsx').setValue(file);\n    }\n  }\n\n  private prepareSave(): any {\n    let input = new FormData();\n    // This can be done a lot prettier; for example automatically assigning values by looping through `this.form.controls`, but we'll keep it as simple as possible here\n    console.log(this.form.get('xlsx').value);\n    input.append('file', this.form.get('xlsx').value);\n    return input;\n  }\n  onSubmit() {\n    const formModel = this.prepareSave();\n    console.log(this.f.tableName.value)\n    this.tableName = this.f.tableName.value;\n    this.loading = true;\n    console.log(this.tableName + \" table\")\n    // In a real-world app you'd have a http request / service call here like\n    // this.http.post('apiUrl', formModel)\n    console.log(formModel);\n    this.dataService.sendFile(formModel, this.tableName).subscribe(\n      data => {\n        console.log(data);\n        alert('done!');\n        this.loading = false;\n      },\n      error => {\n        console.log(error);\n      }\n    );\n\n    /*setTimeout(() => {\n      // FormData cannot be inspected (see \"Key difference\"), hence no need to log it here\n      alert('done!');\n      this.loading = false;\n    }, 1000);*/\n  }\n  clearFile() {\n    this.form.get('xlsx').setValue(null);\n    this.fileInput.nativeElement.value = '';\n  }\n  sendTerraformFile(event) {\n    console.log(event);\n  }\n\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}